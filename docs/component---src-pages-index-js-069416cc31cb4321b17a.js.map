{"version":3,"file":"component---src-pages-index-js-069416cc31cb4321b17a.js","mappings":"sMAQA,UAAeA,EAAI,O,gHCCJ,SAASA,IAEtB,IAAQC,GAAMC,EAAAA,EAAAA,kBAAND,EACR,GAAqCE,EAAAA,EAAAA,cAAnBC,GAAF,EAARC,SAAwB,EAAdD,gBAElB,OACE,gBAAC,IAAM,KACL,uBAAKE,IAAQC,EAAAA,SAAQ,4BAA6BC,UAAU,aAC5D,yBACE,0BAAKP,EAAE,UAET,yBACE,0BACE,sBAAIQ,QAAS,WAAQL,EAAe,KAAM,GAAE,MAC5C,sBAAIK,QAAS,WAAQL,EAAe,KAAM,GAAE,QAKtD,C","sources":["webpack://gatsby-starter-hello-world/./src/pages/index.js","webpack://gatsby-starter-hello-world/./src/pages/page.js"],"sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { useTranslation, useI18next } from \"gatsby-plugin-react-i18next\";\n\nimport { base_url } from \"../env/globals\"\nimport Layout from \"../components/Layout\";\nimport Page from \"./page\";\n\nexport default Page;\n\n\n// this commands defines how the GraphQL query must be executed\n// must be present is all pages that use i18next\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { useTranslation, useI18next } from \"gatsby-plugin-react-i18next\";\n\nimport { base_url } from \"../env/globals\"\nimport Layout from \"../components/Layout\";\n\nimport \"../styles/page.css\";\n\nexport default function Page() {\n\n  const { t } = useTranslation();  // used for showing\n  const { language, changeLanguage } = useI18next();\n\n  return ( \n    <Layout>\n      <img src={`${base_url}imgs/andre_horizontal.jpg`} className=\"home_pic\" />\n      <p>\n        <h1>{t(\"home\")}</h1>\n      </p>\n      <p>\n        <ul>\n          <li onClick={() => { changeLanguage('en') }} >EN</li>\n          <li onClick={() => { changeLanguage('es') }} >ES</li>\n        </ul>\n      </p>\n    </Layout>\n  )\n}\n\n\n// this commands defines how the GraphQL query must be executed\n// must be present is all pages that use i18next\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n"],"names":["Page","t","useTranslation","useI18next","changeLanguage","language","src","base_url","className","onClick"],"sourceRoot":""}