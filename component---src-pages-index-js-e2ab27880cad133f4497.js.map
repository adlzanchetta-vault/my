{"version":3,"file":"component---src-pages-index-js-e2ab27880cad133f4497.js","mappings":"sKAIA,UAAeA,EAAI,O,sGCInB,MAAMC,EAAU,OAOD,SAASD,IAEtB,MAAM,EAAEE,IAAMC,EAAAA,EAAAA,kBAEd,OACE,gBAAC,UAAM,CAACC,QAASH,GACf,uBAAKI,IAAQC,8DACRC,UAAU,WACVC,IAAI,iBACT,0BAAKN,EAAED,IAdYQ,KACvB,MAAMC,EAAeD,EAAYE,MAAM,MACvC,OAAS,gCAAE,IAAED,EAAaE,KAAI,CAACC,EAAKC,IAAO,qBAAGC,IAAKD,GAAID,KAAW,IAAI,EAajEG,CAAgBd,EAAE,iBAGzB,C","sources":["webpack://gatsby-starter-hello-world/./src/pages/index.js","webpack://gatsby-starter-hello-world/./src/pages/page.js"],"sourcesContent":["import { graphql } from \"gatsby\";\n\nimport Page from \"./page\";\n\nexport default Page;\n\n\n// this commands defines how the GraphQL query must be executed\n// must be present is all pages that use i18next\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { useTranslation } from \"gatsby-plugin-react-i18next\";\n\nimport Layout from \"./common/Layout\";\n\nimport \"../styles/page.css\";\n\nconst PAGE_ID = \"home\";\n\nconst processHomeText = (rawHomeText) => {\n  const splittedText = rawHomeText.split('\\n');\n  return ( <> {splittedText.map((txt, i) => (<p key={i}>{txt}</p>))} </> );\n}\n\nexport default function Page() {\n\n  const { t } = useTranslation();  // used for showing\n\n  return ( \n    <Layout page_id={PAGE_ID}>\n      <img src={`${process.env.GATSBY_BASE_URL}imgs/andre_horizontal.jpg`}\n           className=\"home_pic\"\n           alt=\"Andre's face\" />\n      <h1>{t(PAGE_ID)}</h1>\n      {processHomeText(t(\"home_content\"))}\n    </Layout>\n  )\n}\n\n\n// this commands defines how the GraphQL query must be executed\n// must be present is all pages that use i18next\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n"],"names":["Page","PAGE_ID","t","useTranslation","page_id","src","process","className","alt","rawHomeText","splittedText","split","map","txt","i","key","processHomeText"],"sourceRoot":""}